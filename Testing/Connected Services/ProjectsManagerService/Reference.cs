//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Testing.ProjectsManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/IcarusHosting.Server.HostingSystem.Servic" +
        "es")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PermsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Perms {
            get {
                return this.PermsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermsField, value) != true)) {
                    this.PermsField = value;
                    this.RaisePropertyChanged("Perms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessLogInfo", Namespace="http://schemas.datacontract.org/2004/07/IcarusHosting.Server.HostingSystem.Servic" +
        "es")]
    [System.SerializableAttribute()]
    public partial class AccessLogInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TsCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifner {
            get {
                return this.IdentifnerField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifnerField, value) != true)) {
                    this.IdentifnerField = value;
                    this.RaisePropertyChanged("Identifner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TsCreated {
            get {
                return this.TsCreatedField;
            }
            set {
                if ((this.TsCreatedField.Equals(value) != true)) {
                    this.TsCreatedField = value;
                    this.RaisePropertyChanged("TsCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostingWebApplicationInfoComplex", Namespace="http://schemas.datacontract.org/2004/07/IcarusHosting.Server.HostingSystem.Servic" +
        "es")]
    [System.SerializableAttribute()]
    public partial class HostingWebApplicationInfoComplex : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Testing.ProjectsManagerService.HostingWebApplicationInfo ApplicationInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Testing.ProjectsManagerService.HostingWebApplicationBindingInfo[] BindingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Testing.ProjectsManagerService.HostingWebServerInfo ServerInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Testing.ProjectsManagerService.HostingWebApplicationInfo ApplicationInfo {
            get {
                return this.ApplicationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationInfoField, value) != true)) {
                    this.ApplicationInfoField = value;
                    this.RaisePropertyChanged("ApplicationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Testing.ProjectsManagerService.HostingWebApplicationBindingInfo[] Bindings {
            get {
                return this.BindingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BindingsField, value) != true)) {
                    this.BindingsField = value;
                    this.RaisePropertyChanged("Bindings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Testing.ProjectsManagerService.HostingWebServerInfo ServerInfo {
            get {
                return this.ServerInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerInfoField, value) != true)) {
                    this.ServerInfoField = value;
                    this.RaisePropertyChanged("ServerInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostingWebApplicationInfo", Namespace="http://schemas.datacontract.org/2004/07/IcarusHosting.Server.HostingSystem.Servic" +
        "es")]
    [System.SerializableAttribute()]
    public partial class HostingWebApplicationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BindingsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DomainsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FirmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MeasuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WebApplicationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BindingsCount {
            get {
                return this.BindingsCountField;
            }
            set {
                if ((this.BindingsCountField.Equals(value) != true)) {
                    this.BindingsCountField = value;
                    this.RaisePropertyChanged("BindingsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainsCount {
            get {
                return this.DomainsCountField;
            }
            set {
                if ((this.DomainsCountField.Equals(value) != true)) {
                    this.DomainsCountField = value;
                    this.RaisePropertyChanged("DomainsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FirmId {
            get {
                return this.FirmIdField;
            }
            set {
                if ((this.FirmIdField.Equals(value) != true)) {
                    this.FirmIdField = value;
                    this.RaisePropertyChanged("FirmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmIdentifier {
            get {
                return this.FirmIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmIdentifierField, value) != true)) {
                    this.FirmIdentifierField = value;
                    this.RaisePropertyChanged("FirmIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmName {
            get {
                return this.FirmNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmNameField, value) != true)) {
                    this.FirmNameField = value;
                    this.RaisePropertyChanged("FirmName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Measured {
            get {
                return this.MeasuredField;
            }
            set {
                if ((this.MeasuredField.Equals(value) != true)) {
                    this.MeasuredField = value;
                    this.RaisePropertyChanged("Measured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotPublished {
            get {
                return this.NotPublishedField;
            }
            set {
                if ((this.NotPublishedField.Equals(value) != true)) {
                    this.NotPublishedField = value;
                    this.RaisePropertyChanged("NotPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectIdentifier {
            get {
                return this.ProjectIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIdentifierField, value) != true)) {
                    this.ProjectIdentifierField = value;
                    this.RaisePropertyChanged("ProjectIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlReport {
            get {
                return this.UrlReportField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlReportField, value) != true)) {
                    this.UrlReportField = value;
                    this.RaisePropertyChanged("UrlReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlTest {
            get {
                return this.UrlTestField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlTestField, value) != true)) {
                    this.UrlTestField = value;
                    this.RaisePropertyChanged("UrlTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WebApplicationId {
            get {
                return this.WebApplicationIdField;
            }
            set {
                if ((this.WebApplicationIdField.Equals(value) != true)) {
                    this.WebApplicationIdField = value;
                    this.RaisePropertyChanged("WebApplicationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostingWebServerInfo", Namespace="http://schemas.datacontract.org/2004/07/IcarusHosting.Server.HostingSystem.Servic" +
        "es")]
    [System.SerializableAttribute()]
    public partial class HostingWebServerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerPlatformField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerTestDomainField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseAddress {
            get {
                return this.BaseAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseAddressField, value) != true)) {
                    this.BaseAddressField = value;
                    this.RaisePropertyChanged("BaseAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseIp {
            get {
                return this.BaseIpField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseIpField, value) != true)) {
                    this.BaseIpField = value;
                    this.RaisePropertyChanged("BaseIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerIdentifier {
            get {
                return this.ServerIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIdentifierField, value) != true)) {
                    this.ServerIdentifierField = value;
                    this.RaisePropertyChanged("ServerIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerPlatform {
            get {
                return this.ServerPlatformField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerPlatformField, value) != true)) {
                    this.ServerPlatformField = value;
                    this.RaisePropertyChanged("ServerPlatform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerTestDomain {
            get {
                return this.ServerTestDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerTestDomainField, value) != true)) {
                    this.ServerTestDomainField = value;
                    this.RaisePropertyChanged("ServerTestDomain");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostingWebApplicationBindingInfo", Namespace="http://schemas.datacontract.org/2004/07/IcarusHosting.Server.HostingSystem.Servic" +
        "es")]
    [System.SerializableAttribute()]
    public partial class HostingWebApplicationBindingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHttpsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHttps {
            get {
                return this.IsHttpsField;
            }
            set {
                if ((this.IsHttpsField.Equals(value) != true)) {
                    this.IsHttpsField = value;
                    this.RaisePropertyChanged("IsHttps");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetDriveInfo", Namespace="http://schemas.datacontract.org/2004/07/IcarusHosting.Server.HostingSystem.Servic" +
        "es")]
    [System.SerializableAttribute()]
    public partial class NetDriveInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerUrl {
            get {
                return this.ServerUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerUrlField, value) != true)) {
                    this.ServerUrlField = value;
                    this.RaisePropertyChanged("ServerUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Token {
            get {
                return this.TokenField;
            }
            set {
                if ((this.TokenField.Equals(value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectsManagerService.IProjectsManagerService")]
    public interface IProjectsManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/AddToAccessLog", ReplyAction="http://tempuri.org/IProjectsManagerService/AddToAccessLogResponse")]
        Testing.ProjectsManagerService.AddToAccessLogResponse AddToAccessLog(Testing.ProjectsManagerService.AddToAccessLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/AddToAccessLog", ReplyAction="http://tempuri.org/IProjectsManagerService/AddToAccessLogResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.AddToAccessLogResponse> AddToAccessLogAsync(Testing.ProjectsManagerService.AddToAccessLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetCentaurUserInfo", ReplyAction="http://tempuri.org/IProjectsManagerService/GetCentaurUserInfoResponse")]
        Testing.ProjectsManagerService.GetCentaurUserInfoResponse GetCentaurUserInfo(Testing.ProjectsManagerService.GetCentaurUserInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetCentaurUserInfo", ReplyAction="http://tempuri.org/IProjectsManagerService/GetCentaurUserInfoResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetCentaurUserInfoResponse> GetCentaurUserInfoAsync(Testing.ProjectsManagerService.GetCentaurUserInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetDebugFlag", ReplyAction="http://tempuri.org/IProjectsManagerService/GetDebugFlagResponse")]
        Testing.ProjectsManagerService.GetDebugFlagResponse GetDebugFlag(Testing.ProjectsManagerService.GetDebugFlagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetDebugFlag", ReplyAction="http://tempuri.org/IProjectsManagerService/GetDebugFlagResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetDebugFlagResponse> GetDebugFlagAsync(Testing.ProjectsManagerService.GetDebugFlagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetEasyWebUsers", ReplyAction="http://tempuri.org/IProjectsManagerService/GetEasyWebUsersResponse")]
        Testing.ProjectsManagerService.GetEasyWebUsersResponse GetEasyWebUsers(Testing.ProjectsManagerService.GetEasyWebUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetEasyWebUsers", ReplyAction="http://tempuri.org/IProjectsManagerService/GetEasyWebUsersResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetEasyWebUsersResponse> GetEasyWebUsersAsync(Testing.ProjectsManagerService.GetEasyWebUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetEasyWebVersion", ReplyAction="http://tempuri.org/IProjectsManagerService/GetEasyWebVersionResponse")]
        Testing.ProjectsManagerService.GetEasyWebVersionResponse GetEasyWebVersion(Testing.ProjectsManagerService.GetEasyWebVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetEasyWebVersion", ReplyAction="http://tempuri.org/IProjectsManagerService/GetEasyWebVersionResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetEasyWebVersionResponse> GetEasyWebVersionAsync(Testing.ProjectsManagerService.GetEasyWebVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetLastAccessLog", ReplyAction="http://tempuri.org/IProjectsManagerService/GetLastAccessLogResponse")]
        Testing.ProjectsManagerService.GetLastAccessLogResponse GetLastAccessLog(Testing.ProjectsManagerService.GetLastAccessLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetLastAccessLog", ReplyAction="http://tempuri.org/IProjectsManagerService/GetLastAccessLogResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetLastAccessLogResponse> GetLastAccessLogAsync(Testing.ProjectsManagerService.GetLastAccessLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetLastAccessLogAll", ReplyAction="http://tempuri.org/IProjectsManagerService/GetLastAccessLogAllResponse")]
        Testing.ProjectsManagerService.GetLastAccessLogAllResponse GetLastAccessLogAll(Testing.ProjectsManagerService.GetLastAccessLogAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetLastAccessLogAll", ReplyAction="http://tempuri.org/IProjectsManagerService/GetLastAccessLogAllResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetLastAccessLogAllResponse> GetLastAccessLogAllAsync(Testing.ProjectsManagerService.GetLastAccessLogAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetWebApplicationInfoComplex", ReplyAction="http://tempuri.org/IProjectsManagerService/GetWebApplicationInfoComplexResponse")]
        Testing.ProjectsManagerService.GetWebApplicationInfoComplexResponse GetWebApplicationInfoComplex(Testing.ProjectsManagerService.GetWebApplicationInfoComplexRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetWebApplicationInfoComplex", ReplyAction="http://tempuri.org/IProjectsManagerService/GetWebApplicationInfoComplexResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetWebApplicationInfoComplexResponse> GetWebApplicationInfoComplexAsync(Testing.ProjectsManagerService.GetWebApplicationInfoComplexRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetWebApplicationListAll", ReplyAction="http://tempuri.org/IProjectsManagerService/GetWebApplicationListAllResponse")]
        Testing.ProjectsManagerService.GetWebApplicationListAllResponse GetWebApplicationListAll(Testing.ProjectsManagerService.GetWebApplicationListAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetWebApplicationListAll", ReplyAction="http://tempuri.org/IProjectsManagerService/GetWebApplicationListAllResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetWebApplicationListAllResponse> GetWebApplicationListAllAsync(Testing.ProjectsManagerService.GetWebApplicationListAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetWebServerListAll", ReplyAction="http://tempuri.org/IProjectsManagerService/GetWebServerListAllResponse")]
        Testing.ProjectsManagerService.GetWebServerListAllResponse GetWebServerListAll(Testing.ProjectsManagerService.GetWebServerListAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/GetWebServerListAll", ReplyAction="http://tempuri.org/IProjectsManagerService/GetWebServerListAllResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetWebServerListAllResponse> GetWebServerListAllAsync(Testing.ProjectsManagerService.GetWebServerListAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/NetDriveConnect", ReplyAction="http://tempuri.org/IProjectsManagerService/NetDriveConnectResponse")]
        Testing.ProjectsManagerService.NetDriveConnectResponse NetDriveConnect(Testing.ProjectsManagerService.NetDriveConnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/NetDriveConnect", ReplyAction="http://tempuri.org/IProjectsManagerService/NetDriveConnectResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.NetDriveConnectResponse> NetDriveConnectAsync(Testing.ProjectsManagerService.NetDriveConnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/NetDriveDisconnect", ReplyAction="http://tempuri.org/IProjectsManagerService/NetDriveDisconnectResponse")]
        Testing.ProjectsManagerService.NetDriveDisconnectResponse NetDriveDisconnect(Testing.ProjectsManagerService.NetDriveDisconnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/NetDriveDisconnect", ReplyAction="http://tempuri.org/IProjectsManagerService/NetDriveDisconnectResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.NetDriveDisconnectResponse> NetDriveDisconnectAsync(Testing.ProjectsManagerService.NetDriveDisconnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/ReadSmtpConfig", ReplyAction="http://tempuri.org/IProjectsManagerService/ReadSmtpConfigResponse")]
        Testing.ProjectsManagerService.ReadSmtpConfigResponse ReadSmtpConfig(Testing.ProjectsManagerService.ReadSmtpConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/ReadSmtpConfig", ReplyAction="http://tempuri.org/IProjectsManagerService/ReadSmtpConfigResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.ReadSmtpConfigResponse> ReadSmtpConfigAsync(Testing.ProjectsManagerService.ReadSmtpConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/RequestEasyWebAccess", ReplyAction="http://tempuri.org/IProjectsManagerService/RequestEasyWebAccessResponse")]
        Testing.ProjectsManagerService.RequestEasyWebAccessResponse RequestEasyWebAccess(Testing.ProjectsManagerService.RequestEasyWebAccessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/RequestEasyWebAccess", ReplyAction="http://tempuri.org/IProjectsManagerService/RequestEasyWebAccessResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.RequestEasyWebAccessResponse> RequestEasyWebAccessAsync(Testing.ProjectsManagerService.RequestEasyWebAccessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/RestartApplication", ReplyAction="http://tempuri.org/IProjectsManagerService/RestartApplicationResponse")]
        Testing.ProjectsManagerService.RestartApplicationResponse RestartApplication(Testing.ProjectsManagerService.RestartApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/RestartApplication", ReplyAction="http://tempuri.org/IProjectsManagerService/RestartApplicationResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.RestartApplicationResponse> RestartApplicationAsync(Testing.ProjectsManagerService.RestartApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/SetDebugFlag", ReplyAction="http://tempuri.org/IProjectsManagerService/SetDebugFlagResponse")]
        Testing.ProjectsManagerService.SetDebugFlagResponse SetDebugFlag(Testing.ProjectsManagerService.SetDebugFlagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/SetDebugFlag", ReplyAction="http://tempuri.org/IProjectsManagerService/SetDebugFlagResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.SetDebugFlagResponse> SetDebugFlagAsync(Testing.ProjectsManagerService.SetDebugFlagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/UpdateWebApplicationMeasurements", ReplyAction="http://tempuri.org/IProjectsManagerService/UpdateWebApplicationMeasurementsRespon" +
            "se")]
        Testing.ProjectsManagerService.UpdateWebApplicationMeasurementsResponse UpdateWebApplicationMeasurements(Testing.ProjectsManagerService.UpdateWebApplicationMeasurementsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/UpdateWebApplicationMeasurements", ReplyAction="http://tempuri.org/IProjectsManagerService/UpdateWebApplicationMeasurementsRespon" +
            "se")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.UpdateWebApplicationMeasurementsResponse> UpdateWebApplicationMeasurementsAsync(Testing.ProjectsManagerService.UpdateWebApplicationMeasurementsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/WriteSmtpConfig", ReplyAction="http://tempuri.org/IProjectsManagerService/WriteSmtpConfigResponse")]
        Testing.ProjectsManagerService.WriteSmtpConfigResponse WriteSmtpConfig(Testing.ProjectsManagerService.WriteSmtpConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsManagerService/WriteSmtpConfig", ReplyAction="http://tempuri.org/IProjectsManagerService/WriteSmtpConfigResponse")]
        System.Threading.Tasks.Task<Testing.ProjectsManagerService.WriteSmtpConfigResponse> WriteSmtpConfigAsync(Testing.ProjectsManagerService.WriteSmtpConfigRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddToAccessLog", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddToAccessLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string userName;
        
        public AddToAccessLogRequest() {
        }
        
        public AddToAccessLogRequest(string applicationIdentifier, string userName) {
            this.applicationIdentifier = applicationIdentifier;
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddToAccessLogResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddToAccessLogResponse {
        
        public AddToAccessLogResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCentaurUserInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCentaurUserInfoRequest {
        
        public GetCentaurUserInfoRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCentaurUserInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCentaurUserInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.UserInfo GetCentaurUserInfoResult;
        
        public GetCentaurUserInfoResponse() {
        }
        
        public GetCentaurUserInfoResponse(Testing.ProjectsManagerService.UserInfo GetCentaurUserInfoResult) {
            this.GetCentaurUserInfoResult = GetCentaurUserInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDebugFlag", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDebugFlagRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        public GetDebugFlagRequest() {
        }
        
        public GetDebugFlagRequest(string applicationIdentifier) {
            this.applicationIdentifier = applicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDebugFlagResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDebugFlagResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetDebugFlagResult;
        
        public GetDebugFlagResponse() {
        }
        
        public GetDebugFlagResponse(bool GetDebugFlagResult) {
            this.GetDebugFlagResult = GetDebugFlagResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEasyWebUsers", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEasyWebUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        public GetEasyWebUsersRequest() {
        }
        
        public GetEasyWebUsersRequest(string applicationIdentifier) {
            this.applicationIdentifier = applicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEasyWebUsersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEasyWebUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.UserInfo[] GetEasyWebUsersResult;
        
        public GetEasyWebUsersResponse() {
        }
        
        public GetEasyWebUsersResponse(Testing.ProjectsManagerService.UserInfo[] GetEasyWebUsersResult) {
            this.GetEasyWebUsersResult = GetEasyWebUsersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEasyWebVersion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEasyWebVersionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string aApplicationIdentifier;
        
        public GetEasyWebVersionRequest() {
        }
        
        public GetEasyWebVersionRequest(string aApplicationIdentifier) {
            this.aApplicationIdentifier = aApplicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEasyWebVersionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEasyWebVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetEasyWebVersionResult;
        
        public GetEasyWebVersionResponse() {
        }
        
        public GetEasyWebVersionResponse(string GetEasyWebVersionResult) {
            this.GetEasyWebVersionResult = GetEasyWebVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastAccessLog", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastAccessLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        public GetLastAccessLogRequest() {
        }
        
        public GetLastAccessLogRequest(string applicationIdentifier) {
            this.applicationIdentifier = applicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastAccessLogResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastAccessLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.AccessLogInfo GetLastAccessLogResult;
        
        public GetLastAccessLogResponse() {
        }
        
        public GetLastAccessLogResponse(Testing.ProjectsManagerService.AccessLogInfo GetLastAccessLogResult) {
            this.GetLastAccessLogResult = GetLastAccessLogResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastAccessLogAll", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastAccessLogAllRequest {
        
        public GetLastAccessLogAllRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastAccessLogAllResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastAccessLogAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.AccessLogInfo[] GetLastAccessLogAllResult;
        
        public GetLastAccessLogAllResponse() {
        }
        
        public GetLastAccessLogAllResponse(Testing.ProjectsManagerService.AccessLogInfo[] GetLastAccessLogAllResult) {
            this.GetLastAccessLogAllResult = GetLastAccessLogAllResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWebApplicationInfoComplex", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWebApplicationInfoComplexRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        public GetWebApplicationInfoComplexRequest() {
        }
        
        public GetWebApplicationInfoComplexRequest(string applicationIdentifier) {
            this.applicationIdentifier = applicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWebApplicationInfoComplexResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWebApplicationInfoComplexResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.HostingWebApplicationInfoComplex GetWebApplicationInfoComplexResult;
        
        public GetWebApplicationInfoComplexResponse() {
        }
        
        public GetWebApplicationInfoComplexResponse(Testing.ProjectsManagerService.HostingWebApplicationInfoComplex GetWebApplicationInfoComplexResult) {
            this.GetWebApplicationInfoComplexResult = GetWebApplicationInfoComplexResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWebApplicationListAll", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWebApplicationListAllRequest {
        
        public GetWebApplicationListAllRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWebApplicationListAllResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWebApplicationListAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.HostingWebApplicationInfo[] GetWebApplicationListAllResult;
        
        public GetWebApplicationListAllResponse() {
        }
        
        public GetWebApplicationListAllResponse(Testing.ProjectsManagerService.HostingWebApplicationInfo[] GetWebApplicationListAllResult) {
            this.GetWebApplicationListAllResult = GetWebApplicationListAllResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWebServerListAll", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWebServerListAllRequest {
        
        public GetWebServerListAllRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWebServerListAllResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetWebServerListAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.HostingWebServerInfo[] GetWebServerListAllResult;
        
        public GetWebServerListAllResponse() {
        }
        
        public GetWebServerListAllResponse(Testing.ProjectsManagerService.HostingWebServerInfo[] GetWebServerListAllResult) {
            this.GetWebServerListAllResult = GetWebServerListAllResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NetDriveConnect", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class NetDriveConnectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        public NetDriveConnectRequest() {
        }
        
        public NetDriveConnectRequest(string applicationIdentifier) {
            this.applicationIdentifier = applicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NetDriveConnectResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class NetDriveConnectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.NetDriveInfo NetDriveConnectResult;
        
        public NetDriveConnectResponse() {
        }
        
        public NetDriveConnectResponse(Testing.ProjectsManagerService.NetDriveInfo NetDriveConnectResult) {
            this.NetDriveConnectResult = NetDriveConnectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NetDriveDisconnect", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class NetDriveDisconnectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Guid token;
        
        public NetDriveDisconnectRequest() {
        }
        
        public NetDriveDisconnectRequest(string applicationIdentifier, System.Guid token) {
            this.applicationIdentifier = applicationIdentifier;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NetDriveDisconnectResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class NetDriveDisconnectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool NetDriveDisconnectResult;
        
        public NetDriveDisconnectResponse() {
        }
        
        public NetDriveDisconnectResponse(bool NetDriveDisconnectResult) {
            this.NetDriveDisconnectResult = NetDriveDisconnectResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadSmtpConfig", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReadSmtpConfigRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        public ReadSmtpConfigRequest() {
        }
        
        public ReadSmtpConfigRequest(string applicationIdentifier) {
            this.applicationIdentifier = applicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadSmtpConfigResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReadSmtpConfigResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.Dictionary<string, object> ReadSmtpConfigResult;
        
        public ReadSmtpConfigResponse() {
        }
        
        public ReadSmtpConfigResponse(System.Collections.Generic.Dictionary<string, object> ReadSmtpConfigResult) {
            this.ReadSmtpConfigResult = ReadSmtpConfigResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestEasyWebAccess", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RequestEasyWebAccessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string loginName;
        
        public RequestEasyWebAccessRequest() {
        }
        
        public RequestEasyWebAccessRequest(string applicationIdentifier, string loginName) {
            this.applicationIdentifier = applicationIdentifier;
            this.loginName = loginName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestEasyWebAccessResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RequestEasyWebAccessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string RequestEasyWebAccessResult;
        
        public RequestEasyWebAccessResponse() {
        }
        
        public RequestEasyWebAccessResponse(string RequestEasyWebAccessResult) {
            this.RequestEasyWebAccessResult = RequestEasyWebAccessResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestartApplication", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RestartApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        public RestartApplicationRequest() {
        }
        
        public RestartApplicationRequest(string applicationIdentifier) {
            this.applicationIdentifier = applicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestartApplicationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RestartApplicationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool RestartApplicationResult;
        
        public RestartApplicationResponse() {
        }
        
        public RestartApplicationResponse(bool RestartApplicationResult) {
            this.RestartApplicationResult = RestartApplicationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDebugFlag", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetDebugFlagRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool debugFlag;
        
        public SetDebugFlagRequest() {
        }
        
        public SetDebugFlagRequest(string applicationIdentifier, bool debugFlag) {
            this.applicationIdentifier = applicationIdentifier;
            this.debugFlag = debugFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDebugFlagResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetDebugFlagResponse {
        
        public SetDebugFlagResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateWebApplicationMeasurements", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateWebApplicationMeasurementsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        public UpdateWebApplicationMeasurementsRequest() {
        }
        
        public UpdateWebApplicationMeasurementsRequest(string applicationIdentifier) {
            this.applicationIdentifier = applicationIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateWebApplicationMeasurementsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateWebApplicationMeasurementsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Testing.ProjectsManagerService.HostingWebApplicationInfoComplex UpdateWebApplicationMeasurementsResult;
        
        public UpdateWebApplicationMeasurementsResponse() {
        }
        
        public UpdateWebApplicationMeasurementsResponse(Testing.ProjectsManagerService.HostingWebApplicationInfoComplex UpdateWebApplicationMeasurementsResult) {
            this.UpdateWebApplicationMeasurementsResult = UpdateWebApplicationMeasurementsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WriteSmtpConfig", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class WriteSmtpConfigRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string applicationIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Collections.Generic.Dictionary<string, object> smtpConfig;
        
        public WriteSmtpConfigRequest() {
        }
        
        public WriteSmtpConfigRequest(string applicationIdentifier, System.Collections.Generic.Dictionary<string, object> smtpConfig) {
            this.applicationIdentifier = applicationIdentifier;
            this.smtpConfig = smtpConfig;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WriteSmtpConfigResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class WriteSmtpConfigResponse {
        
        public WriteSmtpConfigResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectsManagerServiceChannel : Testing.ProjectsManagerService.IProjectsManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectsManagerServiceClient : System.ServiceModel.ClientBase<Testing.ProjectsManagerService.IProjectsManagerService>, Testing.ProjectsManagerService.IProjectsManagerService {
        
        public ProjectsManagerServiceClient() {
        }
        
        public ProjectsManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectsManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectsManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectsManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Testing.ProjectsManagerService.AddToAccessLogResponse AddToAccessLog(Testing.ProjectsManagerService.AddToAccessLogRequest request) {
            return base.Channel.AddToAccessLog(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.AddToAccessLogResponse> AddToAccessLogAsync(Testing.ProjectsManagerService.AddToAccessLogRequest request) {
            return base.Channel.AddToAccessLogAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetCentaurUserInfoResponse GetCentaurUserInfo(Testing.ProjectsManagerService.GetCentaurUserInfoRequest request) {
            return base.Channel.GetCentaurUserInfo(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetCentaurUserInfoResponse> GetCentaurUserInfoAsync(Testing.ProjectsManagerService.GetCentaurUserInfoRequest request) {
            return base.Channel.GetCentaurUserInfoAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetDebugFlagResponse GetDebugFlag(Testing.ProjectsManagerService.GetDebugFlagRequest request) {
            return base.Channel.GetDebugFlag(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetDebugFlagResponse> GetDebugFlagAsync(Testing.ProjectsManagerService.GetDebugFlagRequest request) {
            return base.Channel.GetDebugFlagAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetEasyWebUsersResponse GetEasyWebUsers(Testing.ProjectsManagerService.GetEasyWebUsersRequest request) {
            return base.Channel.GetEasyWebUsers(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetEasyWebUsersResponse> GetEasyWebUsersAsync(Testing.ProjectsManagerService.GetEasyWebUsersRequest request) {
            return base.Channel.GetEasyWebUsersAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetEasyWebVersionResponse GetEasyWebVersion(Testing.ProjectsManagerService.GetEasyWebVersionRequest request) {
            return base.Channel.GetEasyWebVersion(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetEasyWebVersionResponse> GetEasyWebVersionAsync(Testing.ProjectsManagerService.GetEasyWebVersionRequest request) {
            return base.Channel.GetEasyWebVersionAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetLastAccessLogResponse GetLastAccessLog(Testing.ProjectsManagerService.GetLastAccessLogRequest request) {
            return base.Channel.GetLastAccessLog(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetLastAccessLogResponse> GetLastAccessLogAsync(Testing.ProjectsManagerService.GetLastAccessLogRequest request) {
            return base.Channel.GetLastAccessLogAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetLastAccessLogAllResponse GetLastAccessLogAll(Testing.ProjectsManagerService.GetLastAccessLogAllRequest request) {
            return base.Channel.GetLastAccessLogAll(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetLastAccessLogAllResponse> GetLastAccessLogAllAsync(Testing.ProjectsManagerService.GetLastAccessLogAllRequest request) {
            return base.Channel.GetLastAccessLogAllAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetWebApplicationInfoComplexResponse GetWebApplicationInfoComplex(Testing.ProjectsManagerService.GetWebApplicationInfoComplexRequest request) {
            return base.Channel.GetWebApplicationInfoComplex(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetWebApplicationInfoComplexResponse> GetWebApplicationInfoComplexAsync(Testing.ProjectsManagerService.GetWebApplicationInfoComplexRequest request) {
            return base.Channel.GetWebApplicationInfoComplexAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetWebApplicationListAllResponse GetWebApplicationListAll(Testing.ProjectsManagerService.GetWebApplicationListAllRequest request) {
            return base.Channel.GetWebApplicationListAll(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetWebApplicationListAllResponse> GetWebApplicationListAllAsync(Testing.ProjectsManagerService.GetWebApplicationListAllRequest request) {
            return base.Channel.GetWebApplicationListAllAsync(request);
        }
        
        public Testing.ProjectsManagerService.GetWebServerListAllResponse GetWebServerListAll(Testing.ProjectsManagerService.GetWebServerListAllRequest request) {
            return base.Channel.GetWebServerListAll(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.GetWebServerListAllResponse> GetWebServerListAllAsync(Testing.ProjectsManagerService.GetWebServerListAllRequest request) {
            return base.Channel.GetWebServerListAllAsync(request);
        }
        
        public Testing.ProjectsManagerService.NetDriveConnectResponse NetDriveConnect(Testing.ProjectsManagerService.NetDriveConnectRequest request) {
            return base.Channel.NetDriveConnect(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.NetDriveConnectResponse> NetDriveConnectAsync(Testing.ProjectsManagerService.NetDriveConnectRequest request) {
            return base.Channel.NetDriveConnectAsync(request);
        }
        
        public Testing.ProjectsManagerService.NetDriveDisconnectResponse NetDriveDisconnect(Testing.ProjectsManagerService.NetDriveDisconnectRequest request) {
            return base.Channel.NetDriveDisconnect(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.NetDriveDisconnectResponse> NetDriveDisconnectAsync(Testing.ProjectsManagerService.NetDriveDisconnectRequest request) {
            return base.Channel.NetDriveDisconnectAsync(request);
        }
        
        public Testing.ProjectsManagerService.ReadSmtpConfigResponse ReadSmtpConfig(Testing.ProjectsManagerService.ReadSmtpConfigRequest request) {
            return base.Channel.ReadSmtpConfig(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.ReadSmtpConfigResponse> ReadSmtpConfigAsync(Testing.ProjectsManagerService.ReadSmtpConfigRequest request) {
            return base.Channel.ReadSmtpConfigAsync(request);
        }
        
        public Testing.ProjectsManagerService.RequestEasyWebAccessResponse RequestEasyWebAccess(Testing.ProjectsManagerService.RequestEasyWebAccessRequest request) {
            return base.Channel.RequestEasyWebAccess(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.RequestEasyWebAccessResponse> RequestEasyWebAccessAsync(Testing.ProjectsManagerService.RequestEasyWebAccessRequest request) {
            return base.Channel.RequestEasyWebAccessAsync(request);
        }
        
        public Testing.ProjectsManagerService.RestartApplicationResponse RestartApplication(Testing.ProjectsManagerService.RestartApplicationRequest request) {
            return base.Channel.RestartApplication(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.RestartApplicationResponse> RestartApplicationAsync(Testing.ProjectsManagerService.RestartApplicationRequest request) {
            return base.Channel.RestartApplicationAsync(request);
        }
        
        public Testing.ProjectsManagerService.SetDebugFlagResponse SetDebugFlag(Testing.ProjectsManagerService.SetDebugFlagRequest request) {
            return base.Channel.SetDebugFlag(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.SetDebugFlagResponse> SetDebugFlagAsync(Testing.ProjectsManagerService.SetDebugFlagRequest request) {
            return base.Channel.SetDebugFlagAsync(request);
        }
        
        public Testing.ProjectsManagerService.UpdateWebApplicationMeasurementsResponse UpdateWebApplicationMeasurements(Testing.ProjectsManagerService.UpdateWebApplicationMeasurementsRequest request) {
            return base.Channel.UpdateWebApplicationMeasurements(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.UpdateWebApplicationMeasurementsResponse> UpdateWebApplicationMeasurementsAsync(Testing.ProjectsManagerService.UpdateWebApplicationMeasurementsRequest request) {
            return base.Channel.UpdateWebApplicationMeasurementsAsync(request);
        }
        
        public Testing.ProjectsManagerService.WriteSmtpConfigResponse WriteSmtpConfig(Testing.ProjectsManagerService.WriteSmtpConfigRequest request) {
            return base.Channel.WriteSmtpConfig(request);
        }
        
        public System.Threading.Tasks.Task<Testing.ProjectsManagerService.WriteSmtpConfigResponse> WriteSmtpConfigAsync(Testing.ProjectsManagerService.WriteSmtpConfigRequest request) {
            return base.Channel.WriteSmtpConfigAsync(request);
        }
    }
}
